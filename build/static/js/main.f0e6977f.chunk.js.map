{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/layout/MainNavigation.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/quotes/NoQuotesFound.js","components/pages/QuoteDetail.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/pages/AllQuotes.js","components/pages/NotFound.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","MainNavigation","header","logo","nav","to","CommentItem","props","item","text","CommentsList","comments","map","comment","NewCommentForm","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addCommentHandler","length","onClick","HighlightedQuote","quote","author","NoQuotesFound","noquotes","QuoteDetails","match","useRouteMatch","path","exact","url","Layout","main","children","QuoteItem","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","list","AllQuotes","loadedQuotes","NotFound","AddQuote","React","lazy","App","fallback","QuoteDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0e6977f.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://great-quotes-app-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1DNP9\",\"logo\":\"MainNavigation_logo__3DFw0\",\"nav\":\"MainNavigation_nav__2iMzs\",\"active\":\"MainNavigation_active__1NaQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2W3gL\",\"loading\":\"NewCommentForm_loading__15-rY\",\"control\":\"NewCommentForm_control__3u6gi\",\"actions\":\"NewCommentForm_actions__2Zp1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3TwcG\",\"sorting\":\"QuoteList_sorting__JR9bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2YoWC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__mCxIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1enFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__MPfJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__Sjxjc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__hOfZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__21LkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3FyZY\"};","import classes from './MainNavigation.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst MainNavigation = () => {\r\n    return <section className={classes.header}>\r\n        <h1 className={classes.logo}>Great Quotes</h1>\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n                <li><NavLink to='/quotes'>All Quotes</NavLink></li>\r\n                <li><NavLink to='/new-quote'>Add a Quote</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    </section>\r\n}\r\n\r\nexport default MainNavigation;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error} = useHttp(addComment);\n  const {onAddedComment} = props;\n\n  useEffect(()=>{\n    if(status === 'completed' && !error){\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({commentData:{text: enteredText}, quoteId:props.quoteId})\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <div className='centered'><LoadingSpinner/></div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {quoteId} = params;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const {sendRequest, status, data:loadedComments} = useHttp(getAllComments);\n\n  useEffect(()=>{\n    sendRequest(quoteId)\n  },[quoteId]);\n\n  const addCommentHandler = useCallback(() =>{\n    sendRequest(quoteId);\n  },[sendRequest, quoteId]);\n\n  let comments;\n\n  if(status === 'pending'){\n    comments = <div className='centered'>\n      <LoadingSpinner />\n    </div>\n  }\n\n  if(status === 'completed' && (loadedComments && loadedComments.length > 0)){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments && loadedComments.length === 0)){\n    comments=<p className='centered'>No comments...</p>\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Route, useParams, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Comments from \"../comments/Comments\";\r\nimport HighlightedQuote from '../quotes/HighlightedQuote';\r\nimport NoQuotesFound from '../quotes/NoQuotesFound';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { getSingleQuote } from \"../../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\n\r\nconst QuoteDetails = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n    const {quoteId} = params;\r\n    const {sendRequest, status, data:loadedQuote, error} = useHttp(getSingleQuote,true);\r\n    useEffect(()=>{\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if(status === 'pending'){\r\n        return <div className='centered'>\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n    if(error){\r\n        return <div className='centered focused'>\r\n            {error}\r\n        </div>\r\n    }\r\n    if(status === 'completed' && (!loadedQuote || loadedQuote.length === 0)){\r\n        return <NoQuotesFound/>\r\n    }\r\n\r\n    return <div>\r\n        <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\r\n        <Route path={match.path} exact>\r\n            <div className='centered'>\r\n                <Link className='btn--flat' to={`${match.url}/comments`}>Load comments</Link>\r\n            </div>\r\n        </Route>\r\n        <Route path={`${match.path}/comments`}>\r\n            <Comments/>\r\n        </Route>\r\n    </div>\r\n}\r\n\r\nexport default QuoteDetails;","import MainNavigation from \"./MainNavigation\"\r\nimport classes from './Layout.module.css';\r\nconst Layout = (props) =>{\r\n    return <>\r\n    <MainNavigation/>\r\n    <main className={classes.main}>\r\n        {props.children}\r\n    </main>\r\n    </>\r\n}\r\n\r\nexport default Layout;","import { NavLink } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <NavLink to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </NavLink>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort='+'asc');\n  }\n\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortAscending = queryParams.get('sort') === 'asc';\n  \n  const sortedQuotes = sortQuotes(props.quotes, isSortAscending);\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortAscending?'Descending':'Asending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getAllQuotes } from \"../../lib/api\";\r\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\r\nimport QuoteItem from \"../quotes/QuoteItem\";\r\nimport QuoteList from \"../quotes/QuoteList\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nconst AllQuotes = () => {\r\n    const {sendRequest, status, data:loadedQuotes, error} =  useHttp(getAllQuotes, true);\r\n    \r\n    useEffect(()=>{\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n    if(status === 'pending'){\r\n        return <div className='centered'>\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n    if(error){\r\n        return <div className='centered focused'>\r\n            {error}\r\n        </div>\r\n    }\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n        return <NoQuotesFound/>\r\n    }\r\n    return <QuoteList quotes={loadedQuotes}></QuoteList>\r\n}\r\n\r\nexport default AllQuotes;","const NotFound = () => {\r\n    return <div className='centered'>\r\n        <p>404: Page not found</p>\r\n    </div>\r\n}\r\n\r\nexport default NotFound;","import React, {Suspense} from 'react';\nimport { Redirect, Route, Switch } from \"react-router\";\nimport MainNavigation from \"./components/layout/MainNavigation\";\nimport QuoteDetails from \"./components/pages/QuoteDetail\";\nimport Layout from './components/layout/Layout';\nimport AllQuotes from './components/pages/AllQuotes'; //Regular import\nimport NotFound from \"./components/pages/NotFound\";\nimport LoadingSpinner from './components/UI/LoadingSpinner';\n\nconst AddQuote = React.lazy(()=> import(\"./components/pages/AddQuote\")) //Lazy Import\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense fallback={\n        <div className='centered'>\n          <LoadingSpinner/>\n        </div>\n      }>\n        <Switch>\n          <Route path='/' exact>\n            <Redirect to='/quotes'/>\n          </Route>\n          <Route path='/new-quote'>\n            <AddQuote/>\n          </Route>\n          <Route path='/quotes' exact>\n            <AllQuotes/>\n          </Route>\n          <Route path='/quotes/:quoteId' >\n            <QuoteDetails/>\n          </Route>\n          <Route path='*'>\n            <NotFound/>\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}