{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/AddQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","AddQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBCwD/BC,EArDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAErB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACE,qCACA,cAAC,IAAD,CAAQC,KAAMF,EAAYG,QAAS,SAAAC,GAAQ,MAAI,iEAC/C,cAAC,EAAD,UACE,uBAAMC,QAZW,WACnBJ,GAAc,IAWiBV,UAAWC,IAAQc,KAAMC,SAvB1D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe9C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAxBQ,WACtB1B,GAAc,IAuB0BV,UAAU,MAA5C,kC,gBC5BKqC,UAlBE,WACb,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAUC,cAEhBC,qBAAU,WACQ,cAAXH,GACCC,EAAQG,KAAK,aAEnB,CAACJ,EAAQC,IAOX,OAAO,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WAL3B,SAACuB,GACrBN,EAAYM,GACZJ,EAAQG,KAAK","file":"static/js/3.e295d270.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3lXwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2UcEe\",\"loading\":\"QuoteForm_loading__XO6sK\",\"control\":\"QuoteForm_control__2Zc40\",\"actions\":\"QuoteForm_actions__g-ZEa\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport {Prompt} from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const focusHandler = () => {\n    setIsEntering(true);\n  }\n\n  const addQuoteHandler = () => {\n    setIsEntering(false);\n  }\n\n  return (\n    <>\n    <Prompt when={isEntering} message={location => 'Are you sure you want to leave? All  your data will be lost'}/>\n    <Card>\n      <form onFocus={focusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={addQuoteHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router\";\r\nimport QuoteForm from \"../quotes/QuoteForm\";\r\nimport useHttp from '../../hooks/use-http';\r\nimport {addQuote} from '../../lib/api';\r\nimport { useEffect } from \"react\";\r\nconst AddQuote = () => {\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        if(status === 'completed'){\r\n            history.push('/quotes');\r\n        }\r\n    },[status, history])\r\n\r\n    const AddQuoteHandler = (quoteData) =>{\r\n        sendRequest(quoteData);\r\n        history.push('/quotes');    //pushes a new page (Can go back)\r\n        //history.replace() would replace the page with the new one (cannot go back)\r\n    }\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={AddQuoteHandler}/>\r\n}\r\n\r\nexport default AddQuote;"],"sourceRoot":""}